# The vector operation within the predicate is convergent (but the predicate is not)
# If each active lane is doing the same thing then can turn into a scalar without predicate
# and merge based on the predicate later.

main {
# init scalar values
  zero: int = const 0;
  one: int = const 1;
  two: int = const 2;
  three: int = const 3;
  a0: int = const 7;
  a1: int = const 11;
# init vectors
  vec0: vector = s2vb a0;
  vec1: vector = s2vb a1;
  vec2: vector = s2v zero one two three;
  vec3: vector = s2v one zero two three;
# do predicated arithmetic
  p0: pred = vcmp vec2 vec3;
  (p0) vec4: vector = vadd vec0 vec0;
  (!p0) vec5: vector = vadd vec1 vec1;
  (!p0) vec6: vector = vadd vec5 vec1;
# merge results
  vec7: vector = vphi p0 vec4 vec6;
# extract vector elements
  a2: int = v2s vec7 zero;
  a3: int = v2s vec7 one;
  a4: int = v2s vec7 two;
  a5: int = v2s vec7 three;
# print results
  print a2;
  print a3;
  print a4;
  print a5;
}
